accessWidener	v1	named

# Needed to add custom network packets that aren't routed through `CustomPayload` packets.
accessible	class	net/minecraft/network/ConnectionProtocol$PacketSet

# Allows easily copying `Matrix4f`s to `Mat4`s
accessible	field	com/mojang/math/Matrix4f	m00	F
accessible	field	com/mojang/math/Matrix4f	m01	F
accessible	field	com/mojang/math/Matrix4f	m02	F
accessible	field	com/mojang/math/Matrix4f	m03	F
accessible	field	com/mojang/math/Matrix4f	m10	F
accessible	field	com/mojang/math/Matrix4f	m11	F
accessible	field	com/mojang/math/Matrix4f	m12	F
accessible	field	com/mojang/math/Matrix4f	m13	F
accessible	field	com/mojang/math/Matrix4f	m20	F
accessible	field	com/mojang/math/Matrix4f	m21	F
accessible	field	com/mojang/math/Matrix4f	m22	F
accessible	field	com/mojang/math/Matrix4f	m23	F
accessible	field	com/mojang/math/Matrix4f	m30	F
accessible	field	com/mojang/math/Matrix4f	m31	F
accessible	field	com/mojang/math/Matrix4f	m32	F
accessible	field	com/mojang/math/Matrix4f	m33	F

# Needed to keep vanilla GL state in sync with our GL state changes
# BufferUploader has some state to keep track of, but it already exposes a way to reset its internal state
accessible	class	com/mojang/blaze3d/platform/GlStateManager$TextureState
accessible	field	com/mojang/blaze3d/platform/GlStateManager	activeTexture	I
accessible	field	com/mojang/blaze3d/platform/GlStateManager	TEXTURES	[Lcom/mojang/blaze3d/platform/GlStateManager$TextureState;
accessible	field	net/minecraft/client/renderer/ShaderInstance	lastProgramId	I

# Direct access to `RenderType` internals (used for wrestling textures out of `BakedGlyph`s)
accessible	class	net/minecraft/client/renderer/RenderType$CompositeRenderType
accessible	field	net/minecraft/client/renderer/RenderType$CompositeRenderType	OUTLINE	Ljava/util/function/BiFunction;
accessible	field	net/minecraft/client/renderer/RenderType$CompositeRenderType	state	Lnet/minecraft/client/renderer/RenderType$CompositeState;
accessible	field	net/minecraft/client/renderer/RenderType$CompositeRenderType	outline	Ljava/util/Optional;
accessible	field	net/minecraft/client/renderer/RenderType$CompositeRenderType	isOutline	Z

accessible	class	net/minecraft/client/renderer/RenderType$OutlineProperty

accessible	class	net/minecraft/client/renderer/RenderType$CompositeState
accessible	field	net/minecraft/client/renderer/RenderType$CompositeState	textureState	Lnet/minecraft/client/renderer/RenderStateShard$EmptyTextureStateShard;
accessible	field	net/minecraft/client/renderer/RenderType$CompositeState	shaderState	Lnet/minecraft/client/renderer/RenderStateShard$ShaderStateShard;
accessible	field	net/minecraft/client/renderer/RenderType$CompositeState	transparencyState	Lnet/minecraft/client/renderer/RenderStateShard$TransparencyStateShard;
accessible	field	net/minecraft/client/renderer/RenderType$CompositeState	depthTestState	Lnet/minecraft/client/renderer/RenderStateShard$DepthTestStateShard;
accessible	field	net/minecraft/client/renderer/RenderType$CompositeState	cullState	Lnet/minecraft/client/renderer/RenderStateShard$CullStateShard;
accessible	field	net/minecraft/client/renderer/RenderType$CompositeState	lightmapState	Lnet/minecraft/client/renderer/RenderStateShard$LightmapStateShard;
accessible	field	net/minecraft/client/renderer/RenderType$CompositeState	overlayState	Lnet/minecraft/client/renderer/RenderStateShard$OverlayStateShard;
accessible	field	net/minecraft/client/renderer/RenderType$CompositeState	layeringState	Lnet/minecraft/client/renderer/RenderStateShard$LayeringStateShard;
accessible	field	net/minecraft/client/renderer/RenderType$CompositeState	outputState	Lnet/minecraft/client/renderer/RenderStateShard$OutputStateShard;
accessible	field	net/minecraft/client/renderer/RenderType$CompositeState	texturingState	Lnet/minecraft/client/renderer/RenderStateShard$TexturingStateShard;
accessible	field	net/minecraft/client/renderer/RenderType$CompositeState	writeMaskState	Lnet/minecraft/client/renderer/RenderStateShard$WriteMaskStateShard;
accessible	field	net/minecraft/client/renderer/RenderType$CompositeState	lineState	Lnet/minecraft/client/renderer/RenderStateShard$LineStateShard;

accessible	class	net/minecraft/client/renderer/RenderStateShard$EmptyTextureStateShard
accessible	class	net/minecraft/client/renderer/RenderStateShard$ShaderStateShard
accessible	class	net/minecraft/client/renderer/RenderStateShard$TransparencyStateShard
accessible	class	net/minecraft/client/renderer/RenderStateShard$DepthTestStateShard
accessible	class	net/minecraft/client/renderer/RenderStateShard$CullStateShard
accessible	class	net/minecraft/client/renderer/RenderStateShard$LightmapStateShard
accessible	class	net/minecraft/client/renderer/RenderStateShard$OverlayStateShard
accessible	class	net/minecraft/client/renderer/RenderStateShard$LayeringStateShard
accessible	class	net/minecraft/client/renderer/RenderStateShard$OutputStateShard
accessible	class	net/minecraft/client/renderer/RenderStateShard$TexturingStateShard
accessible	class	net/minecraft/client/renderer/RenderStateShard$WriteMaskStateShard
accessible	class	net/minecraft/client/renderer/RenderStateShard$LineStateShard
accessible	class	net/minecraft/client/renderer/RenderStateShard$BooleanStateShard
accessible	class	net/minecraft/client/renderer/RenderStateShard$OffsetTexturingStateShard
accessible	class	net/minecraft/client/renderer/RenderStateShard$MultiTextureStateShard
accessible	class	net/minecraft/client/renderer/RenderStateShard$TextureStateShard

accessible	field	net/minecraft/client/renderer/RenderStateShard$TextureStateShard	texture	Ljava/util/Optional;
accessible	field	net/minecraft/client/renderer/RenderStateShard$TextureStateShard	blur	Z
accessible	field	net/minecraft/client/renderer/RenderStateShard$TextureStateShard	mipmap	Z
